###################
# Global Settings #
###################

stages:
  - prepare
  - build_n_test

default:
  interruptible: true
  before_script:
   - echo "Running on $(hostname)"
   - section() { echo $'\e[0K'"section_$1:$(date +%s):$2"$'\r\e[0K'"${3+${COLOR_CYAN}$3${COLOR_PLAIN}}"; }

variables:
  ENABLED_CLUSTERS: "darwin"
  PROJECT_SPACK_ENV: /usr/projects/xcap/spack-env/oss/2024-08-01
  SINGULARITY_GOLDFILES_VERSION: "goldfiles-1.8.0"
  GIT_SUBMODULE_STRATEGY: normal

.ascgit_job:
  id_tokens:
    SITE_ID_TOKEN:
      aud: https://asc-git.lanl.gov

.darwin_job:
  rules:
    - if: $ENABLED_CLUSTERS =~ /darwin/
  variables:
    CLUSTER: darwin
    SCHEDULER_PARAMETERS: "-N 1 --qos=debug -p general,skylake-gold,skylake-platinum --constraint=\"(cpu_family:skylake)&ib:edr\""
  tags:
    - darwin-slurm-shared

.rocinante_job:
  variables:
    CLUSTER: rocinante
    SCHEDULER_PARAMETERS: "-N 1 -A asc-ci -p ci --reservation ci --time=00:45:00"
  tags:
    - rocinante
    - batch

.prepare_spack:
  script: &prepare_spack
    - umask 0007
    - export CI_SPACK_ENV=$TMPDIR/ci-env
    - source $PROJECT_SPACK_ENV/replicate.sh $CI_SPACK_ENV
    - source ${CI_SPACK_ENV}/activate.sh
    
.prepare_spack_env:
  script: &prepare_spack_env
    - source ${CI_SPACK_ENV}/systems/${CLUSTER}/activate.sh oss/singularity-eos/${SPACK_ENV_NAME}

.build_and_test:
  stage: build_n_test
  script: &build_and_test
    - section start "prepare_spack[collapsed=true]" "Prepare Spack"
    - *prepare_spack
    - *prepare_spack_env
    - section end "prepare_spack"
    - section start "prepare_env[collapsed=true]" "Create environment"
    - spack repo add spack-repo
    - spack develop --no-clone -p ${CI_PROJECT_DIR}/utils/spiner spiner@main
    - spack develop --no-clone -p ${CI_PROJECT_DIR}/utils/ports-of-call ports-of-call@main
    - spack develop -b build -p $PWD --no-clone singularity-eos@main
    - spack install --only dependencies -j $(nproc)
    - section end "prepare_env"
    - section start "spack_cmake_configure[collapsed=true]" "Initial Spack CMake Configure"
    - spack install --test root --include-build-deps -u cmake -v singularity-eos
    - section end "spack_cmake_configure"
    - section start "cmake_build[collapsed=false]" "CMake Build"
    - spack build-env --dump ci_env.sh singularity-eos
    - source ci_env.sh
    - cmake -DCMAKE_VERBOSE_MAKEFILE=off -DCMAKE_INSTALL_PREFIX=$PWD/build/install build
    - cmake --build build --parallel
    - section end "cmake_build"
    - section start "testing[collapsed=false]" "Tests"
    - pushd build
    - ./sesame2spiner/sesame2spiner -s materials.sp5 ../sesame2spiner/examples/unit_tests/*.dat;
    - ./sesame2spiner/sesame2spiner -s duplicates.sp5 ../sesame2spiner/examples/duplicate-test/*.dat;
    - popd
    - export CTEST_OUTPUT_ON_FAILURE=1
    - ctest --test-dir build --output-junit tests.xml
    - section end "testing"
    - section start install "Install"
    - cmake --build build --target install
    - section end install
  artifacts:
    expire_in: 2 weeks
    paths:
      - ${CI_PROJECT_DIR}/build/tests.xml
    reports:
      junit: ${CI_PROJECT_DIR}/build/tests.xml


########
# Jobs #
########

download_prereq:
  stage: prepare
  variables:
    GIT_SUBMODULE_STRATEGY: none
  script:
   - wget https://github.com/lanl/singularity-eos/releases/download/${SINGULARITY_GOLDFILES_VERSION}/goldfiles.tar.gz
  artifacts:
    paths:
      - goldfiles.tar.gz

openmpi_gcc:
  extends: [.ascgit_job, .darwin_job, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-gcc

openmpi_fortran_gcc:
  extends: [.ascgit_job, .darwin_job, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-fortran-gcc

openmpi_cuda_gcc_ampere:
  extends: [.ascgit_job, .darwin_job, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-cuda-gcc-ampere
    SCHEDULER_PARAMETERS: "-N 1 --qos=debug -p shared-gpu-ampere"

openmpi_cuda_gcc_volta:
  extends: [.ascgit_job, .darwin_job, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-cuda-gcc-volta
    SCHEDULER_PARAMETERS: "-N 1 --qos=debug -p volta-x86 -C cpu_family:haswell"

openmpi_fortran_kokkos_openmp_gcc:
  extends: [.ascgit_job, .darwin_job, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-fortran-kokkos-openmp-gcc

openmpi_fortran_kokkos_static_openmp_gcc:
  extends: [.ascgit_job, .darwin_job, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-fortran-kokkos-static-openmp-gcc

openmpi_rocm_gcc:
  extends: [.ascgit_job, .darwin_job, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-rocm-gcc
    SCHEDULER_PARAMETERS: "-N 1 --qos=debug -p shared-gpu-amd-mi250"

craympich_gcc:
  extends: [.ascgit_job, .rocinante_job, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: craympich-gcc

craympich_fortran_gcc:
  extends: [.ascgit_job, .rocinante_job, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: craympich-fortran-gcc
