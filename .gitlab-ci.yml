###################
# Global Settings #
###################

stages:
  - prepare
  - build_n_test

default:
  interruptible: true

variables:
  ENABLED_CLUSTERS: "darwin,rocinante"
  GIT_SUBMODULE_STRATEGY: normal

.ascgit_job:
  id_tokens:
    SITE_ID_TOKEN:
      aud: https://asc-git.lanl.gov

.darwin_job:
  rules:
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "pipeline"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "schedule"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_COMMIT_TAG
  variables:
    CLUSTER: darwin
    SCHEDULER_PARAMETERS: "-N 1 --qos=debug -p general,skylake-gold,skylake-platinum --constraint=\"(cpu_family:skylake)&ib:edr\""
  tags:
    - darwin-slurm-shared

.rocinante_job:
  rules:
    - if: $ENABLED_CLUSTERS =~ /rocinante/ && $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $ENABLED_CLUSTERS =~ /rocinante/ && $CI_PIPELINE_SOURCE == "pipeline"
    - if: $ENABLED_CLUSTERS =~ /rocinante/ && $CI_PIPELINE_SOURCE == "schedule"
    - if: $ENABLED_CLUSTERS =~ /rocinante/ && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $ENABLED_CLUSTERS =~ /rocinante/ && $CI_COMMIT_TAG
  variables:
    CLUSTER: rocinante
    SCHEDULER_PARAMETERS: "-N 1 -A asc-ci -p ci --reservation ci --time=00:45:00"
  tags:
    - rocinante
    - batch

.report_tests:
  artifacts:
    expire_in: 2 weeks
    paths:
      - ${CI_PROJECT_DIR}/build/tests.xml
    reports:
      junit: ${CI_PROJECT_DIR}/build/tests.xml

.build_and_test:
  stage: build_n_test
  script:
    - source .gitlab/build_and_test.sh ${CLUSTER} ${SPACK_ENV_NAME}


########
# Jobs #
########

download_prereq:
  stage: prepare
  extends: [.ascgit_job, .darwin_job]
  variables:
    GIT_SUBMODULE_STRATEGY: none
  script:
   - .gitlab/download_prereq.sh
  artifacts:
    paths:
      - goldfiles.tar.gz

openmpi_gcc:
  extends: [.ascgit_job, .darwin_job, .report_tests, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-gcc

openmpi_fortran_gcc:
  extends: [.ascgit_job, .darwin_job, .report_tests, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-fortran-gcc

openmpi_cuda_gcc_ampere:
  extends: [.ascgit_job, .darwin_job, .report_tests, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-cuda-gcc-ampere
    SCHEDULER_PARAMETERS: "-N 1 --qos=debug -p shared-gpu-ampere"

openmpi_cuda_gcc_volta:
  extends: [.ascgit_job, .darwin_job, .report_tests, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-cuda-gcc-volta
    SCHEDULER_PARAMETERS: "-N 1 --qos=debug -p volta-x86 -C cpu_family:haswell"

# currently disabled due to very long compilation times
#openmpi_fortran_cuda_gcc_ampere:
#  extends: [.ascgit_job, .darwin_job, .report_tests, .build_and_test]
#  needs: [download_prereq]
#  variables:
#    SPACK_ENV_NAME: openmpi-fortran-cuda-gcc-ampere
#    SCHEDULER_PARAMETERS: "-N 1 --qos=debug -p shared-gpu-ampere"
#
#openmpi_fortran_cuda_gcc_volta:
#  extends: [.ascgit_job, .darwin_job, .report_tests, .build_and_test]
#  needs: [download_prereq]
#  variables:
#    SPACK_ENV_NAME: openmpi-fortran-cuda-gcc-volta
#    SCHEDULER_PARAMETERS: "-N 1 --qos=debug -p volta-x86 -C cpu_family:haswell"

# EXAMPLE of how to modify an existing Spack environment and/or set CMake options
#openmpi_cuda_gcc_volta_noclosure:
#  stage: build_n_test
#  extends: [.ascgit_job, .darwin_job, .report_tests,]
#  needs: [download_prereq]
#  variables:
#    SPACK_ENV_NAME: openmpi-cuda-gcc-volta
#    SCHEDULER_PARAMETERS: "-N 1 --qos=debug -p volta-x86 -C cpu_family:haswell"
#    SINGULARITY_EOS_SPEC: "%gcc@=12.2.0 +mpi+cuda+kokkos+spiner+hdf5+kokkos-kernels+tests~closure~fortran build_extra=sesame,stellarcollapse cuda_arch=70"
#  script:
#   - source .gitlab/build_and_test.sh --until env ${CLUSTER} ${SPACK_ENV_NAME}
#   - spack config add "packages:singularity-eos:require:'${SINGULARITY_EOS_SPEC}'"
#   - spack concretize -f --fresh
#   - spack_cmake_configure
#   - cmake_build -DSINGULARITY_BUILD_CLOSURE=off -DSINGULARITY_USE_FORTRAN=off
#   - cmake_test
#   - cmake_install

openmpi_fortran_kokkos_openmp_gcc:
  extends: [.ascgit_job, .darwin_job, .report_tests, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-fortran-kokkos-openmp-gcc

openmpi_fortran_kokkos_static_openmp_gcc:
  extends: [.ascgit_job, .darwin_job, .report_tests, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: openmpi-fortran-kokkos-static-openmp-gcc

#openmpi_rocm_gcc:
#  extends: [.ascgit_job, .darwin_job, .report_tests, .build_and_test]
#  needs: [download_prereq]
#  variables:
#    spack_env_name: openmpi-rocm-gcc
#    scheduler_parameters: "-n 1 --qos=debug -p shared-gpu-amd-mi250"

#openmpi_fortran_rocm_gcc:
#  extends: [.ascgit_job, .darwin_job, .report_tests, .build_and_test]
#  needs: [download_prereq]
#  variables:
#    spack_env_name: openmpi-fortran-rocm-gcc
#    scheduler_parameters: "-n 1 --qos=debug -p shared-gpu-amd-mi250"

craympich_gcc:
  extends: [.ascgit_job, .rocinante_job, .report_tests, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: craympich-gcc

craympich_fortran_gcc:
  extends: [.ascgit_job, .rocinante_job, .report_tests, .build_and_test]
  needs: [download_prereq]
  variables:
    SPACK_ENV_NAME: craympich-fortran-gcc
