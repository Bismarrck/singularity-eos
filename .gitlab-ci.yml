###################
# Global Settings #
###################

stages:
  - static_analysis
  - build_n_test

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  SINGULARITY_EOS_CLANG_FORMAT_VERSION: "12.0.0"
  SINGULARITY_EOS_GCC_VERSION: "9.3.0"
  SINGULARITY_EOS_SPACK_SPEC: "singularity-eos@main+mpi%gcc@${SINGULARITY_EOS_GCC_VERSION}"
  SINGULARITY_CI_DATA_DIR: "/projects/xcap/ec/singularity-eos-data"

before_script:
  - export HOME=${CI_PROJECT_DIR}
  - export TMPDIR=${CI_PROJECT_DIR}
  - cd ${CI_PROJECT_DIR}
  - unset SPACK_ROOT
  - echo "Spack Version:${XCAP_OSS_SPACK_REF}"
  - git clone https://github.com/spack/spack.git
  - cd spack && git checkout ${XCAP_OSS_SPACK_REF##*-} && cd ${CI_PROJECT_DIR}
  - export SPACK_ARCH=`./spack/bin/spack arch`
  - echo ${SPACK_ARCH}
  - export PLATFORM="${SPACK_ARCH%%-*}"
  - echo ${PLATFORM}
  - mkdir -p ${CI_PROJECT_DIR}/spack/etc/spack/${PLATFORM}
  - cp ${XCAP_OSS_SPACK_DIR}/etc/spack/*.yaml ${CI_PROJECT_DIR}/spack/etc/spack/
  - cp ${CI_PROJECT_DIR}/.gitlab-ci/config/spack/*.yaml ${CI_PROJECT_DIR}/spack/etc/spack/
  - sed -i "s;XCAP_OSS_SPACK_DIR_TMP;${XCAP_OSS_SPACK_DIR};g" "${CI_PROJECT_DIR}/spack/etc/spack/upstreams.yaml"
  - cp ${XCAP_OSS_SPACK_DIR}/etc/spack/${PLATFORM}/*.yaml ${CI_PROJECT_DIR}/spack/etc/spack/${PLATFORM}/
  - source ${CI_PROJECT_DIR}/spack/share/spack/setup-env.sh
  - spack compiler list
  - spack repo add --scope site ${CI_PROJECT_DIR}/spack-repo
  - spack repo list
  - mkdir -p ${CI_PROJECT_DIR}/spack_env
  - spack env create --without-view -d ${CI_PROJECT_DIR}/spack_env
  - spack env activate -d ${CI_PROJECT_DIR}/spack_env
  - spack dev-build -q ${SINGULARITY_EOS_SPACK_SPEC} || ( cat spack-build-out.txt && exit 1 )
  - export SINGULARITY_EOS_CMD="spack install --show-log-on-error ${SINGULARITY_EOS_SPACK_SPEC}"
  - ( echo "$SINGULARITY_EOS_CMD" && $SINGULARITY_EOS_CMD )
  - source ${CI_PROJECT_DIR}/spack/share/spack/setup-env.sh
  - spack module tcl refresh -y
  - spack env loads -r -x singularity-eos
  - export modName="${CI_PROJECT_DIR}/spack_env/loads"
  - sed -i "1s;^;module load gcc/${SINGULARITY_EOS_GCC_VERSION}\n;" ${modName}
  - sed -i "1s;^;#%Module\n;" ${modName}

##########################
# Build Matrix Variables #
##########################

.buildtype_debug: &buildtype_debug
  BUILD_TYPE: "Debug"

.buildtype_release: &buildtype_release
  BUILD_TYPE: "Release"

.skylake: &skylake
    SCHEDULER_PARAMETERS: "--nodes=1 --partition=skylake-gold,skylake-platinum"

.power9: &power9
    SCHEDULER_PARAMETERS: "--nodes=1 --partition=power9"

#################
# General Setup #
#################

.job: &job_def
  tags:
    - darwin-slurm-shared
  variables:
    SCHEDULER_PARAMETERS: "--nodes=1 --partition=skylake-gold,skylake-platinum"
  only:
    refs:
      - main
      - merge_requests
  except:
    refs:

.artifacts: &artifacts_def
  artifacts:
    name: "singularity-eos-${CI_COMMIT_REF_SLUG}-${CI_JOB_NAME}-${CI_JOB_ID}"
    paths:
      - ${CI_PROJECT_DIR}/build
      - ${CI_PROJECT_DIR}/spack
      - ${CI_PROJECT_DIR}/spack_env
    when: always
    expire_in: 3 hours
  dependencies: []

#######################
# Job Script Template #
#######################

.clang-format:
  stage: static_analysis
  variables:
    GIT_SUBMODULE_STRATEGY: none
  script:
    - cd ${CI_PROJECT_DIR}
    - mkdir clang_format_env
    - spack env create --without-view -d ${CI_PROJECT_DIR}/clang_format_env
    - spack env activate -d ${CI_PROJECT_DIR}/clang_format_env
    - spack install --show-log-on-error llvm@${XCAP_SAMPLE_REPO_CLANG_FORMAT_VERSION}+clang%gcc@${XCAP_SAMPLE_REPO_GCC_VERSION}
    - spack module tcl refresh -y
    - spack env loads -r
    - source ${CI_PROJECT_DIR}/clang_format_env/loads
    - clang-format -version
    - find ${CI_PROJECT_DIR} -regex '.*\.\(cpp\|hpp\)' | xargs clang-format -style=file -i && git diff --exit-code --ignore-submodules

.sphinx-doc:
  stage: static_analysis
  variables:
    GIT_SUBMODULE_STRATEGY: none
  script:
    - cd ${CI_PROJECT_DIR}
    - mkdir sphinx_doc_env
    - spack env create --without-view -d ${CI_PROJECT_DIR}/sphinx_doc_env
    - spack env activate -d ${CI_PROJECT_DIR}/sphinx_doc_env
    - spack install --show-log-on-error py-sphinx%gcc@${SINGULARITY_EOS_GCC_VERSION}
    - spack install --show-log-on-error py-sphinx-rtd-theme@0.4.3%gcc@${SINGULARITY_EOS_GCC_VERSION}
    - spack install --show-log-on-error py-sphinx-multiversion%gcc@${SINGULARITY_EOS_GCC_VERSION}
    - spack module tcl refresh -y
    - spack env loads -r
    - source ${CI_PROJECT_DIR}/sphinx_doc_env/loads
    - cd ${CI_PROJECT_DIR}/doc/sphinx
    - make html
    - rm -rf ${CI_PROJECT_DIR}/public
    - mv _build/html ${CI_PROJECT_DIR}/public

.test:
  stage: build_n_test
  extends:
    - .job
  script:
    - module purge
    - module use ${CI_PROJECT_DIR}/spack_env
    - module load loads # module load compiler, deps, etc.
    - module list
    - mkdir -p build
    - cd build
    - |
      cmake -DSINGULARITY_USE_EOSPAC=ON \
            -DSINGULARITY_USE_HDF5=ON \
            -DSINGULARITY_BUILD_SESAME2SPINER=ON \
            -DSINGULARITY_BUILD_STELLARCOLLAPSE2SPINER=ON \
            -DSINGULARITY_BUILD_TESTS=ON \
            -DSINGULARITY_TEST_SESAME=ON \
            -DSINGULARITY_TEST_STELLAR_COLLAPSE=ON \
            ..
    - make -j
    - ./sesame2spiner/sesame2spiner -s materials.sp5 ../sesame2spiner/examples/unit_tests/*.dat
    - ./sesame2spiner/sesame2spiner -s duplicates.sp5 ../sesame2spiner/examples/duplicate-test/*.dat
    - make test

########
# Jobs #
########

format:
  <<: *job_def
  extends: .clang-format
  allow_failure: true

pages_check:
  <<: *job_def
  extends: .sphinx-doc
  only:
    refs:
      - merge_requests
      - pipelines
  except:

pages:
  <<: *job_def
  extends: .sphinx-doc
  artifacts:
    paths:
      - public
  only:
    refs:
      - main
  except:
    refs:
      - pipelines

gnu_skylake:
  <<: *job_def
  extends: .test
  variables:
    <<: *skylake

gnu_power9:
  <<: *job_def
  extends: .test
  variables:
    <<: *power9

install_singularity-eos_fort:
  stage: build_n_test
  extends:
    - .job
  script:
    - module purge
    - module use ${CI_PROJECT_DIR}/spack_env
    - module load loads # module load compiler, deps, etc.
    - module list
    - export TARGET_DIR=${CI_PROJECT_DIR}/install/fort
    - mkdir -p ${TARGET_DIR} build
    - cd build
    - |
      cmake -DSINGULARITY_USE_FORTRAN=ON \
            -DCMAKE_INSTALL_PREFIX=${TARGET_DIR} \
            -DSINGULARITY_USE_EOSPAC=ON \
            -DSINGULARITY_BUILD_SESAME2SPINER=ON \
            ..
    - make -j
    - make install

install_singularity-eos_nofort:
  stage: build_n_test
  extends:
    - .job
  script:
    - module purge
    - module use ${CI_PROJECT_DIR}/spack_env
    - module load loads # module load compiler, deps, etc.
    - module list
    - export TARGET_DIR=${CI_PROJECT_DIR}/install/nofort
    - mkdir -p ${TARGET_DIR} build
    - cd build
    - |
      cmake -DSINGULARITY_USE_FORTRAN=OFF \
            -DCMAKE_INSTALL_PREFIX=${TARGET_DIR} \
            -DSINGULARITY_BUILD_STELLARCOLLAPSE2SPINER=ON \
            ..
    - make -j
    - make install
