# ------------------------------------------------------------------------------#
# Â© 2021-2023. Triad National Security, LLC. All rights reserved.  This program
# was produced under U.S. Government contract 89233218CNA000001 for Los Alamos
# National Laboratory (LANL), which is operated by Triad National Security, LLC
# for the U.S.  Department of Energy/National Nuclear Security Administration.
# All rights in the program are reserved by Triad National Security, LLC, and
# the U.S. Department of Energy/National Nuclear Security Administration. The
# Government is granted for itself and others acting on its behalf a
# nonexclusive, paid-up, irrevocable worldwide license in this material to
# reproduce, prepare derivative works, distribute copies to the public, perform
# publicly and display publicly, and to permit others to do so.
# ------------------------------------------------------------------------------#

# ------------------------------------------------------------------------------#
# singularity-eos options
# ------------------------------------------------------------------------------#

@SINGULARITY_EOS_CONFIG_CODE@

# ------------------------------------------------------------------------------#
# add singularity-eos cmake files
# ------------------------------------------------------------------------------#
get_filename_component(singularity-eos_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}"
                       PATH)
if(NOT SINGULARITY_EOS_CMAKE)
  get_filename_component(singularity-eos_CMAKE_BASE_DIR
                         "${singularity-eos_CMAKE_DIR}" DIRECTORY)
  message(
    STATUS "Found singularity-eos CMake Modules (appending CMAKE_MODULE_PATH): "
           ${singularity-eos_CMAKE_BASE_DIR})
  list(APPEND CMAKE_MODULE_PATH ${singularity-eos_CMAKE_BASE_DIR})
  set(SINGULARITY_EOS_CMAKE TRUE)
endif()

# ------------------------------------------------------------------------------#
# library dependencies
# ------------------------------------------------------------------------------#
if(NOT TARGET ports-of-call::ports-of-call)
  find_package(ports-of-call REQUIRED)
endif()

if(NOT TARGET mpark_variant)
  find_package(mpark_variant REQUIRED)
endif()

if(@SINGULARITY_USE_SPINER@ AND NOT TARGET spiner::spiner)
  find_package(spiner REQUIRED)
endif()

if(@SINGULARITY_USE_SPINER_WITH_HDF5@)
  if(NOT TARGET HDF5::HDF5 OR NOT HDF5_LIBRARIES)
    find_package(
      HDF5
      COMPONENTS C HL
      REQUIRED)
  endif()
  set(SPINER_USE_HDF ON)
endif()

if(@SINGULARITY_USE_SPINER_WITH_PARALLEL_HDF5@ AND NOT TARGET MPI::MPI_CXX)
  # do i need enable_language here?
  find_package(
    MPI
    COMPONENTS C CXX
    REQUIRED)
endif()

if(@SINGULARITY_USE_KOKKOS@ AND NOT TARGET Kokkos::kokkos)
  find_package(Kokkos REQUIRED)
endif()

if(@SINGULARITY_USE_KOKKOSKERNELS@ AND NOT TARGET Kokkos::kokkoskernels)
  find_package(KokkosKernels REQUIRED)
endif()

if(@SINGULARITY_USE_EIGEN@ AND NOT TARGET Eigen3::Eigen)
  find_package(Eigen3 REQUIRED)
endif()

if(@SINGULARITY_USE_EOSPAC@ AND NOT TARGET EOSPAC::eospac)
  find_package(EOSPAC REQUIRED)
endif()

# ------------------------------------------------------------------------------#
# singularity-eos imported targets
# ------------------------------------------------------------------------------#
if(NOT TARGET singularity-eos AND NOT singularity-eos_BINARY_DIR)
  include(${singularity-eos_CMAKE_DIR}/singularity-eosTargets.cmake)
endif()
